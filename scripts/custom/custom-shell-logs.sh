#!/bin/bash
set -euo pipefail

log() {
    # CrÃ©e une ligne de sÃ©paration avec des tirets
    local separator_line
    separator_line=$(printf '\033[1;30m%*s\033[0m\n' "$(tput cols)" '' | tr ' ' '-')

    # DÃ©finit les codes de couleur pour diffÃ©rents types de messages
    declare -A color_codes
    local color_codes=(
      ["default"]='\033[0;37m'  # Gris
      ["cyan"]='\033[1;36m'  # Cyan clair
      ["green"]='\033[1;32m'  # Vert clair
      ["blue"]='\033[1;34m'  # Bleu clair
      ["orange"]='\033[1;33m'  # Jaune
      ["red"]='\033[1;31m'  # Rouge
    )

    # DÃ©finit les valeurs par dÃ©faut
    local color=${color_codes["default"]} # Couleur par dÃ©faut
    local bold='\033[1m' # Gras par dÃ©faut
    local message="$1" # Message Ã  afficher
    local emoji="" # Emoji par dÃ©faut

    # DÃ©finit la couleur et l'Ã©moji en fonction du type de message
    [[ $message == *\[DEBUG\]* ]] && { color=${color_codes["default"]}; emoji="â¬›"; } # Gris foncÃ©
    [[ $message == *\[LOG\]* ]] && { color=${color_codes["cyan"]}; emoji="ðŸŸ¦"; }  # Cyan clair
    [[ $message == *\[SUCCESS\]* ]] && { color=${color_codes["green"]}; emoji="ðŸŸ©"; }  # Vert clair
    [[ $message == *\[OK\]* ]] && { color=${color_codes["blue"]}; emoji="ðŸŸ¦"; }  # Bleu clair
    [[ $message == *\[WARNING\]* ]] && { color=${color_codes["orange"]}; emoji="ðŸŸ¨"; }  # Jaune
    [[ $message == *\[ERROR\]* ]] && { color=${color_codes["red"]}; emoji="ðŸŸ¥"; }  # Rouge
    [[ $message == *\[INFO\]* ]] && { color=${color_codes["cyan"]}; emoji="ðŸŸ¦"; } # Cyan foncÃ©
    [[ $message == *\[ATTENTION\]* ]] && { color=${color_codes["red"]}; emoji="ðŸŸ§"; } # Rouge

    # Affiche le message avec la couleur et l'Ã©moji appropriÃ©s
    printf "%s\n" "$separator_line"
    printf "${bold}${color}%s %s\033[0m\n" "$emoji" "$message"
    printf "%s\n" "$separator_line"
}
