#!/bin/bash
set -euo pipefail

log() {
    # D√©finit les codes de couleur pour diff√©rents types de messages
    declare -A color_codes
    local color_codes=(
      ["default"]='\033[0;37m'  # Gris
      ["cyan"]='\033[1;36m'  # Cyan clair
      ["green"]='\033[1;32m'  # Vert clair
      ["blue"]='\033[1;34m'  # Bleu clair
      ["orange"]='\033[1;33m'  # Jaune
      ["red"]='\033[1;31m'  # Rouge
    )

    # Cr√©e une ligne de s√©paration avec des tirets
    local terminal_width
    terminal_width=$(tput cols)
    local separator_line="\033[1;30m"
    for ((i = 0; i < terminal_width; i++)); do
        separator_line="${separator_line}-"
    done
    separator_line="${separator_line}\033[0m"

    # D√©finit les valeurs par d√©faut
    local color=${color_codes["default"]} # Couleur par d√©faut
    local bold='\033[1m' # Gras par d√©faut
    local message="$1" # Message √† afficher
    local emoji="" # Emoji par d√©faut

    # D√©finit la couleur et l'√©moji en fonction du type de message
    [[ $message == *\[DEBUG\]* ]] && { color=${color_codes["default"]}; emoji="‚¨õ"; } # Gris fonc√©
    [[ $message == *\[LOG\]* ]] && { color=${color_codes["cyan"]}; emoji="üü¶"; }  # Cyan clair
    [[ $message == *\[SUCCESS\]* ]] && { color=${color_codes["green"]}; emoji="üü©"; }  # Vert clair
    [[ $message == *\[OK\]* ]] && { color=${color_codes["blue"]}; emoji="üü¶"; }  # Bleu clair
    [[ $message == *\[WARNING\]* ]] && { color=${color_codes["orange"]}; emoji="üü®"; }  # Jaune
    [[ $message == *\[ERROR\]* ]] && { color=${color_codes["red"]}; emoji="üü•"; }  # Rouge
    [[ $message == *\[INFO\]* ]] && { color=${color_codes["cyan"]}; emoji="üü¶"; } # Cyan fonc√©
    [[ $message == *\[ATTENTION\]* ]] && { color=${color_codes["red"]}; emoji="üüß"; } # Rouge

    # Affiche le message avec la couleur et l'√©moji appropri√©s
    echo -e "$separator_line"
    echo -e "${bold}${color}${emoji} ${message}\033[0m"
    echo -e "$separator_line"
}